import cosas.*
import camion.*

describe "cargar cosas" {
  test "carga de bateriaAntiaerea" {
    camion.cargar(bateriaAntiaerea)
    assert.equals(#{bateriaAntiaerea}, camion.cosas())
  }  

  test "wl camion no vuelve a cargar algo que ya tiene" {
    camion.cargar(bateriaAntiaerea)
    
    assert.throwsException({ camion.cargar(bateriaAntiaerea) })
  }
}

describe "descarga de cosas" {
  test "descargar residuosRadiactivos" {
    camion.cargar(residuosRadiactivos)
    camion.descargar(residuosRadiactivos)

    assert.equals(#{}, camion.cosas())
  }

  test "el camion no puede descargar algo que no tiene" {
    assert.throwsException({ camion.descargar(bateriaAntiaerea) })
  }
}
  
describe "es todo peso par" {
  test "camio cargado con peso par" {
    camion.cargar(bumblebee)
    arenaAGranel.peso(50)
    camion.cargar(arenaAGranel)

    assert.equals(true, camion.todoPesoPar())
  }

  test "camio cargado con peso impar" {
    arenaAGranel.peso(51)
    camion.cargar(arenaAGranel)

    assert.equals(false, camion.todoPesoPar())
  }
}

describe "peso exacto" {
  method initialize() {
    camion.cargar(bumblebee)
    arenaAGranel.peso(50)
    camion.cargar(arenaAGranel)
  }

  test "camion cargado con peso exacto" {
    assert.equals(true, camion.pesaExactamente(50))
    assert.equals(true, camion.pesaExactamente(800))
  }

  test "camion no cargado con ese peso" {
    assert.equals(false, camion.pesaExactamente(500))
  }
}